interface OrderType {
  /** Unique identifier for the order */
  id?: string;

  /** Unique identifier for the user who placed the order */
  userId?: string;

  /** Unique identifier for the product associated with the order */
  productId?: string;

  brandId?: string;

  /** Title or name of the order */
  title?: string;

  customerId?: string;

  /** Email address of the user who placed the order */
  email?: string;

  price?: number;

  rates?: any;

  partner?: "cbk";

  quantity?: number;

  /** Beneficiary Mobile Numbers to receive order fulfilment such as data or airtime */
  beneficiaryMobileNumbers?: string;

  refunded?: boolean;

  settlementDate?: number;

  /** Beneficiary Mobile Number to receive order fulfilment such as data or airtime */
  mobileNumber?: string;

  /** Name of the user who placed the order */
  name?: string;

  /** Current status of the order (e.g., pending, completed) */
  status?:
    | "live"
    | "archived"
    | "success"
    | "pending"
    | "paid"
    | "successful"
    | "processing"
    | "processed"
    | "completed"
    | "invalid"
    | "refunded"
    | "cancelled";

  /** amount (price) of the product at the time of the order. Only used to debit user or initiate payment*/
  amount?: number;

  /** Status indicating whether the owner has been settled (e.g., paid) */
  brandOwnerSettled?: boolean;

  brandOwnerSettledConfirmation?: boolean;

  sellerData?: UserTypes;

  /** Status indicating whether the affiliate has been settled (e.g., paid) */
  affilliateSettled?: boolean;

  /** Amount received for the order */
  amountReceived?: string;

  /** Payment gateway used for the order (e.g., PayPal, Stripe) */
  paymentGateway?: "paystack" | "flutterwave";

  /** Reference ID provided by the payment gateway */
  referenceId?: string;

  /** Timestamp when the order was created */
  createdAt?: string;

  /** Items in the cart at the time of the order */
  cart?: CartItem[];

  /** Subtotal of the order (before taxes, shipping, etc.) */
  subTotal?: number;

  /** wallet to debit */
  walletId?: string;

  /** referrence Id as generated by the fulfilling partner */
  fulfillId?: string;

  tokens?: any[];

  downloadUrl?: string;

  /** List of products associated with the order */
  products?: ProductTypes[];

  /** Type of service the order is related to (if applicable) */
  type?: string;

  orderValue?: number;

  commission?: number;

  subsidy?: number;

  discount?: number;

  orderBrand?: string;

  orderBrandOwner?: string;

  orderBrandOwnerWalletId?: string;

  /** others such as iucNumber, meterNumber etc */
  others?: any;

  mille?: number;

  returnNotEnoughFund?: boolean;

  planInfo?: PackageTypes;

  orderBrandCommission?: _SettlementBrandDetailsModel;

  productBrandCommission?: _SettlementBrandDetailsModel;

  orderBrandCommissionStatus?: boolean;

  masterCommission?: number;

  masterCommissionStatus?: boolean;

  productParentBrandCommission?: number;

  productParentBrandCommissionStatus?: boolean;

  orderParentBrandCommission?: number;

  orderParentBrandCommissionStatus?: boolean;

  onwerRevenue?: number;

  onwerRevenueStatus?: boolean;

  orderBrandDetails?: _SettlementBrandDetailsModel;

  orderParentBrandDetails?: _SettlementBrandDetailsModel;

  productBrandDetails?: _SettlementBrandDetailsModel;

  masterBrandDetails?: _SettlementBrandDetailsModel;

  productParentBrandDetails?: _SettlementBrandDetailsModel;

  duration?: PlanDuration;

  orderCurrencySymbol?: string;

  orderCurrency?: string;

  exchangeRate?: number;

  productPrice?: number;

  currency?: string;

  fulfillResponse?: any;

  productData?: any;
}
interface _SettlementBrandDetailsModel {
  id: string;
  ownerId: string;
  ownerWalletId: string;
  accountNumber?: number | null;
  accountName?: string;
  shareRate: number;
  bank?: string;
  country?: string;
  currencyCode?: string;
  currencySymbol?: string;
  bankName?: string;
  sales_commission?: number;
  commission?: number;
  commissionStatus?: boolean;
}
